#!/bin/bash

usage()
{
    echo
    echo "Usage: $(basename $0) [--help] [--mirror] [--protocol PROTOCOL] [--direction DIRECTION_ID]"
    echo
    echo "Change monitor configuration."
    echo
    echo "For non-LVDS protocol, default is extended screen."
    echo "Direction ID is ignored if mirror option is set."
    echo
    echo "Protocols:"
    echo " *0 -> LVDS"
    echo "  1 -> VGA"
    echo "  2 -> HDMI"
    echo
    echo "Direction IDs for extended mode:"
    echo " *0 -> left"
    echo "  1 -> above"
    echo "  2 -> right"
    echo "  3 -> below"
    echo
}

# Default options
mirror=0
mon_proto=0
direction_id=0
vga="--off"
hdmi="--off" 
win_restore=0

# Get command line options 
while [ "$1" ]; do 
    case "$1" in 
        -h | --help)
            usage
            exit 0
            ;;
        -m | --mirror)
            mirror=1
            shift
            ;;
        -p | --protocol)
            mon_proto=$2
            shift 2
            ;;
        -d | --direction)
            direction_id=$2
            shift 2
            ;;
        *)
            echo "Error: invalid command line option, $1"
            usage
            exit 1
            ;;
    esac
done

# Validate        
if [ $mon_proto -lt 0 ] && [ $mon_proto -gt 2 ]; then
    echo "Error: invalid protocol value."
    exit 1 
fi

if [ $direction_id -lt 0 ] || [ $direction_id -gt 3 ]; then
    echo "Error: invalid direction value."
    exit 1 
fi

# Select monitor relative position
if [ $mirror -eq 0 ]; then
    # Extended mode
    case $direction_id in
        0) rel_pos="--left-of LVDS1" ;;
        1) rel_pos="--above LVDS1" ;; 
        2) rel_pos="--right-of LVDS1" ;; 
        3) rel_pos="--below LVDS1" ;; 
    esac
elif [ $mirror -eq 1 ]; then
    # Mirror mode
    rel_pos="--pos 0x0"
fi

# Select monitor protocol
mon_query="$(xrandr)"
if [ $mon_proto -eq 0 ]; then
    if [ $(echo "$mon_query" | grep -c '\bconnected\b') -gt 1 ]; then
        # Restore windows into default screen
        . custom_utils
        window_restore
    fi
elif [ $mon_proto -eq 1 ]; then
    if [ $(echo "$mon_query" | grep -c 'VGA1 connected\b') -eq 1 ]; then
        vga="--auto $rel_pos --rotate normal"
    else
        echo "Error: VGA connection was not detected."
        exit 1
    fi
elif [ $mon_proto -eq 2 ]; then
    if [ $(echo "$mon_query" | grep -c 'HDMI1 connected\b') -eq 1 ]; then
        hdmi="--auto $rel_pos --rotate normal"
    else
        echo "Error: HDMI connection was not detected."
        exit 1
    fi
fi

# Run
xrandr --output VIRTUAL1 --off --output DP1 --off --output HDMI1 $hdmi --output LVDS1 --primary --auto --pos 0x0 --rotate normal --output VGA1 $vga

exit 0

