#!/bin/sh

. "$HOME/bin/common_utils"
. "$HOME/bin/error_utils"

usage()
{
cat << _USAGE_
Usage: $(basename $0) [--help] [--file "SASFILE"] [SASOPTIONS]

Run SAS script.

If a SAS file is not provided, current directory is searched for one.
All other arguments are passed directly to SAS command line.
_USAGE_
}

# Default options
sasffile=""
sasopts=""
filext=".sas"

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help) usage
            exit 0 ;;
        -f | --file)
            case "$2" in
                "") error_msg "incomplete command line option, $1" 1 ;;
                *) sasffile="$2" ;;
            esac
            shift 2 ;;
        *) sasopts="$sasopts $1"
            shift ;;
    esac
done

# Check application dependences
missing_apps=0
for a in cat dirname basename sas; do
    if [ ! "$(command -v "$a")" ]; then
        error_msg "application '$a' was not found"
        missing_apps=$((missing_apps + 1))
    fi
done
[ $missing_apps -eq 0 ] || exit 1

# Validate
[ -z "$sasffile" ] && sasffile="$(find_file_ext "$filext")"
if [ ! -f "$sasffile" ]; then
    error_msg "file '$sasffile' does not exists" 1
fi

# Commands (compile)
sasdir="$(dirname "$sasffile")"
sasfile="$(basename "$sasffile")"
sas_cmd="sas -nonews $sasopts \"$sasfile\""

# Change to file directory
pushd . > /dev/null 2>&1
cd "$sasdir"

# Run
eval $sas_cmd; [ $? -eq 0 ] || exit 1

# Change to initial directory
popd > /dev/null 2>&1

