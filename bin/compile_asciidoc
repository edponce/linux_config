#!/bin/bash

. "$HOME/bin/error_utils"
. "$HOME/bin/common_utils"

usage()
{
cat << _EOF_
Usage: $(basename $0) [--help] [--type DOC_TYPE] [--file "ADFILE"]

Compile an ASCIIDoc file into PDF format based on the specified document type.

If an ASCIIDoc file is not provided, current directory is searched for one.
Default file type is article.

Document types:
 *0 -> article (title page, revision table, TOC, sections, wide text)
  1 -> book (title page, revision table, TOC, preamble, chapters, wide text)
  2 -> docbook (title page, TOC, preamble, chapters, narrow text)
_EOF_
}

# Default options
adtype=0
adffile=
filext=".asciidoc"

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help)
            usage
            exit 0
            ;;
        -t | --type)
            adtype=$2
            shift 2
            ;;
        -f | --file)
            adffile="$2"
            shift 2
            ;;
        *)
            usage
            error_msg "invalid command line option, $1" 1
            ;;
    esac
done

# Validate
if [ -z "$adffile" ]; then
    find_file_ext "$filext"
    [ $? -eq 0 ] || exit 1
    adffile="$file_list"
fi
if [ ! -e "$adffile" ]; then
    error_msg "file '$adffile' does not exists" 1
fi

# Commands (compile and view)
addir="$(dirname "$adffile")"
adfile="$(basename "$adffile")"
adbase="${adfile%.*}"
adpdf="$adbase.pdf"
adxml="$adbase.xml"
dblatex_cmd="dblatex $adxml -T simple"
view_cmd="evince"
case $adtype in
    0) ad_cmd="a2x -d article -f pdf $adfile" ;;
    1) ad_cmd="a2x -d book -f pdf $adfile" ;;
    2) ad_cmd="asciidoc -b docbook $adfile" ;;
esac

# Change to file directory
pushd . > /dev/null 2>&1
cd "$addir"

# Run
$ad_cmd
if [ -e "$adxml" ]; then
    $dblatex_cmd
    rm "$adxml"
fi

# View
[ -e "$adpdf" ] && $view_cmd "$adpdf" &

# Change to initial directory
popd > /dev/null 2>&1

exit 0

