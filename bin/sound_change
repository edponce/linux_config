#!/bin/sh

errmsg="\033[01;31mERROR\033[00m"
warnmsg="\033[01;33mWARNING\033[00m"

usage()
{
cat << _EOF_
Usage: $(basename $0) [--help] [--input] [--profile PROFILE_ID]

Change sound card configuration.

Default is to disable input analog stereo.
Default is ALSA PCI card with output analog stereo profile.

Profiles:
  0 -> off
 *1 -> analog stereo
  2 -> HDMI stereo
  3 -> HDMI surround
  4 -> HDMI surround 7.1
_EOF_
}

# Default options
sound_card="alsa_card.pci-0000_00_1b.0"
sound_input=0
profile_id=1

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help) usage
            exit 0 ;;
        -i | --input) sound_input=1
            shift ;;
        -p | --profile) profile_id=$2
            shift 2 ;;
        *) usage
            printf "%b\n" "$errmsg: invalid command line option, $1"
            exit 1 ;;
    esac
done

# Validate
if [ $profile_id -lt 0 ] && [ $profile_id -gt 4 ]; then
    printf "%b\n" "$errmsg: invalid output profile value"
    exit 1
fi

# Select sound output profile
if [ $profile_id -eq 0 ]; then
    # Query status of sound profile
    curr_sink="$(pacmd stat | awk -F':' '/Default sink name/ { print $2 }')"
    new_sink="auto_null"
    profile="off"
else
    # Query status of sound profile
    curr_sink="$(pacmd stat | awk -F':' '/Default sink name/ { print $2 }' | awk -F'.' '{ print $NF }')"
    case $profile_id in
        1) new_sink="analog-stereo" ;;
        2) new_sink="hdmi-stereo" ;;
        3) new_sink="hdmi-surround" ;;
        4) new_sink="hdmi-surround71" ;;
    esac

    [ $new_sink = $curr_sink ] && exit 0
    profile="output:$new_sink"

    # Check for sound input profile
    [ $sound_input -eq 1 ] && profile="${profile}+input:analog-stereo"
fi

pacmd set-card-profile "$sound_card" "$profile"

