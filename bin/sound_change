#!/bin/bash

usage()
{
    echo
    echo "Usage: $(basename $0) [--help] [--input] [--profile PROFILE_ID]"
    echo
    echo "Change sound card configuration."
    echo
    echo "Default is to disable input analog stereo."
    echo "Default is ALSA PCI card with output analog stereo profile."
    echo
    echo "Profiles:"
    echo " 0 -> off"
    echo " 1 -> analog stereo (default)"
    echo " 2 -> HDMI stereo"
    echo " 3 -> HDMI surround"
    echo " 4 -> HDMI surround 7.1"
    echo
}

# Default options
sound_card="alsa_card.pci-0000_00_1b.0"
sound_input=0
profile_id=1

# Get command line options 
while [ "$1" ]; do 
    case "$1" in 
        -h | --help)
        usage
        exit 0
        ;;
        -i | --input)
        sound_input=1
        shift 1
        ;;
        -p | --profile)
        profile_id=$2
        shift 2
        ;;
        *)
        echo "Error: invalid command line option, $1"
        usage
        exit 1
        ;;
    esac
done

# Validate        
if [ $profile_id -lt 0 ] && [ $profile_id -gt 4 ]; then
    echo "Error: invalid output profile value."
    exit 1 
fi

# Select sound output profile
if [ $profile_id -eq 0 ]; then
    # Query status of sound profile
    curr_sink="$(pacmd stat | awk -F':' '/Default sink name/ { print $2 }')"
    new_sink="auto_null"
    profile="off"
else
    # Query status of sound profile
    curr_sink="$(pacmd stat | awk -F':' '/Default sink name/ { print $2 }' | awk -F'.' '{ print $NF }')"
    case $profile_id in
        1) new_sink="analog-stereo" ;;
        2) new_sink="hdmi-stereo" ;;
        3) new_sink="hdmi-surround" ;;
        4) new_sink="hdmi-surround71" ;;
    esac 
    profile="output:$new_sink"

    # Check for sound input profile
    if [ $sound_input -eq 1 ]; then
        profile+="+input:analog-stereo"
    fi
fi

# Run
if [ $new_sink != $curr_sink ]; then
    pacmd set-card-profile "$sound_card" "$profile"
fi

exit 0

