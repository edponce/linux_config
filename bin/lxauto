#!/bin/bash

. "$HOME/bin/error_utils"

usage()
{
cat << _USAGE_
Usage: $(basename $0) [--help] [--xterm] [--delay DELAY] [--window WINDOW_ID] "APPLICATION"

Run application automatically in an existing terminal session.

A terminal can be launched if required.
The command can be delayed to allow terminal startup.
Default delay is 0.5 seconds, allowed range is [0-5].

Window IDs:
  0 -> first LXTerminal window given by wmctrl, useful for autostart
 *1 -> active window
  # -> specific window
_USAGE_
}

# Default
xterm=0
delay=0.5
wid="1"
app=

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help)
            usage
            exit 0
            ;;
        -x | --xterm)
            xterm=1
            shift
            ;;
        -d | --delay)
            delay=$2
            shift 2
            ;;
        -w | --window)
            wid="$2"
            shift 2
            ;;
        *)
            app="$@"
            shift $#
            ;;
    esac
done

# Validate
if [ -z "$app" ]; then
    error_msg "no application was specified" 1
fi

if [ $(bc <<< "if ($delay < 0 || $delay > 5) 1 else 0") -eq 1 ]; then
    error_msg "invalid delay value" 1
fi

# app [args]
appname="$(echo "$app" | sed 's/\b\w\+=\S*\s\b//' | awk '{ print $1 }')"
if [ ! "$(command -v $appname)" ]; then
    error_msg "application '$app' was not found" 1
fi
echo "$appname"

# Check if launch terminal
[ $xterm -eq 1 ] && lxterminal

# Wait
sleep $delay

# Run commands
if [ "$wid" = "1" ]; then
    # Active window mode
    xdotool type "$app"
    xdotool key Return
else
    # Specific window mode
    if [ "$wid" = "0" ]; then
        # For autostart
        wid="$(wmctrl -l | grep 'LXTerminal' | head -n 1 | awk '{ print $1 }')"
        if [ -z "$wid" ]; then
            error_msg "failed to find an existing terminal window" 1
        fi
    else
        if [ -z "$(wmctrl -l | grep $wid)" ]; then
            error_msg "failed to find terminal window, $wid" 1
        fi
    fi
    xdotool type --window "$wid" "$app"
    xdotool key --window "$wid" Return
    xdotool windowactivate --sync "$wid"
fi

exit 0

