#!/bin/bash 

usage()
{
    echo
    echo "Usage: $(basename $0) [--help] [--pid PID]"
    echo
    echo "Sets names to all unnamed windows based on corresponding command name."
    echo "A specific window can be targeted by providing its process ID."
    echo
}

pid=

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help)
        usage
        exit 0
        ;;
        -p | --pid)
        pid=$2
        shift 2
        ;;
        *)
        echo "Error: invalid command line option, $1"
        usage
        exit 1
        ;;
    esac
done

# Set name to unnamed window based on process command
# Inputs: window ID, window process ID
# Outputs: N/A
set_win_name()
{
    local wid wpid wname

    wid=$1
    wpid=$2
    wname="$(ps -A | awk '/'"$wpid"'/ { print $4 }')"
    case "$wname" in
        lxterminal)
        wname="LXTerminal"
        ;;
    esac
    eval $(wmctrl -i -r $wid -N "$wname")
}

# Loop through all active windows
echo "$(wmctrl -l -p)" | while read wquery; do
    win_id=$(echo $wquery | awk '{ print $1 }')
    win_pid=$(echo $wquery | awk '{ print $3 }')

    # Check all windows 
    if [ -z "$pid" ]; then
        # If unnamed window, set name
        if [ -z "$(echo $wquery | awk '{ print $5 }')" ]; then
            set_win_name $win_id $win_pid
        fi

    # Check specific windows
    elif [ $win_pid -eq $pid ]; then
        set_win_name $win_id $win_pid
        break
    fi
done

unset pid win_id win_pid

