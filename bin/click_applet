#!/bin/bash

errmsg="\033[01;31mERROR\033[00m"
warnmsg="\033[01;33mWARNING\033[00m"

usage()
{
cat << _USAGE_
Usage: $(basename $0) [--help] [--click CLICK_ID] --applet "APPLET"

Perform a mouse click to an applet found in desktop panel.

Mouse click IDs:
 *1 - left button
  2 - middle button
  3 - right button
_USAGE_
}

# Default options
applet=""
click_id=1

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help) usage
            exit 0 ;;
        -c | --click) click_id=$2
            shift 2 ;;
        -a | --applet) applet="$2"
            shift 2 ;;
        *) usage
            printf "%b\n" "$errmsg: invalid command line option, $1"
            exit 1 ;;
    esac
done

# Validate
if [ -z "$applet" ]; then
    printf "%b\n" "$errmsg: no applet was specified"
    exit 1
fi

if [ $click_id -lt 1 ] || [ $click_id -gt 3 ]; then
    printf "%b\n" "$errmsg: invalid 'mouse click' value [1-3]"
    exit 1
fi

# Save initial mouse position and active window
# Outputs: X, Y, SCREEN, WINDOW
eval $(xdotool getmouselocation --shell)
win_active=$(xdotool getactivewindow)

# Query applet information
applet_query="$(xwininfo -root -tree | grep $applet | head -n 1)"
if [ -z "$applet_query" ]; then
    printf "%b\n" "$errmsg: applet '$applet' was not found in desktop panel"
    exit 1
fi

# Get dimensions and position of applet
applet_dims=($(echo "$applet_query" | awk '{ print $(NF-1) }' | sed 's/\([[:digit:]]\+\)x\([[:digit:]]\+\).*/\1 \2/g'))
applet_pos=($(echo "$applet_query" | awk '{ print $NF }' | sed -e 's/+/ /g' -e 's/-/ -/g'))

# Show panel bar
x=$((applet_pos[0] + applet_dims[0]/2))
y=$((applet_pos[1] + applet_dims[1]))
xdotool mousemove --sync -- $x $y
sleep 1 # allow panel to appear

# Move mouse on top of applet
y=$((applet_pos[1] + applet_dims[1]/2))
xdotool mousemove --sync -- $x $y
sleep 0.5 # wait for app detection

# Click applet
xdotool click $click_id

# Restore initial mouse position and active window
#xdotool mousemove --sync -- $X $Y windowactivate $win_active
xdotool mousemove --sync -- $X $Y

exit 0

