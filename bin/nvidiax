#!/bin/bash

. "$HOME/bin/error_utils"

usage()
{
cat << _USAGE_
Usage: $(basename $0) [--help] [--perf PERF_LEVEL] [--tool LAUNCH_TOOL_ID] --run "APPLICATION"

Runs an application on NVIDIA GPU with power management control.
An X11 'Device' configuration file sets NVIDIA PowerMizer options.

This script may require root privileges to change the performance level
of the X11 NVIDIA configuration file.

X11 NVIDIA configuration file: $1

GPU Performance levels:
  1 -> high
  2 -> medium
 *3 -> low

GPU launch tools:
  0 -> none
  1 -> primusrun
 *2 -> optirun
_USAGE_
}

# Default options
x11_nvidia_file="/etc/bumblebee/xorg.conf.nvidia" # X11 NVIDIA configuration file
launch_tool=2
perf_level=3
perf_level_changed=0
app=

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help)
            usage $x11_nvidia_file
            exit 0
            ;;
        -t | --tool)
            launch_tool=$2
            shift 2
            ;;
        -p | --perf)
            perf_level=$2
            shift 2
            ;;
        -r | --run)
            app="$2"
            shift 2
            ;;
        *)
            usage $x11_nvidia_file
            error_msg "invalid command line option, $1" 1
            ;;
    esac
done

# Validate
if [ -z "$app" ]; then
    error_msg "no application was specified" 1
fi

# app [args]
appname="$(echo "$app" | sed 's/\b\w\+=\S*\s\b//' | awk '{ print $1 }')"
if [ ! "$(command -v $appname)" ]; then
    error_msg "application '$appname' was not found" 1
fi

if [ $launch_tool -lt 0 ] || [ $launch_tool -gt 2 ]; then
    error_msg "invalid launch tool identifier [0-2]" 1
fi

if [ $launch_tool -gt 0 ]; then
    # Check that NVIDIA modules are not loaded/used by other applications
    if [ $(lsmod | grep -c 'nvidia') -gt 0 ]; then
        warn_msg "please close all applications using NVIDIA modules ... exiting" 0
    fi

    if [ $perf_level -lt 1 ] || [ $perf_level -gt 3 ]; then
        error_msg "invalid performance level [1-3]" 1
    fi

    if [ ! -e "$x11_nvidia_file" ]; then
        error_msg "X11 NVIDIA configuration file '$x11_nvidia_file' does not exists" 1
    fi

    # Get current performance level in X11 NVIDIA configuration file
    default_perf_level=$(grep 'RegistryDwords' "$x11_nvidia_file" | grep -o 'PowerMizerDefault=0x[[:digit:]]' | awk -F'=0x' '{ print $2 }')
    echo "Current NVIDIA GPU performance level is $default_perf_level."

    # Set performance level in X11 NVIDIA configuration file
    if [ $perf_level -ne $default_perf_level ]; then
        echo "Setting NVIDIA GPU performance level to $perf_level."
        sudo sed -i "s/\b\(PowerMizer\(Default\|DefaultAC\)=0x\)[[:digit:]];\?\b/\1$perf_level/g" "$x11_nvidia_file"
        perf_level_changed=1
        sleep 0.5
    fi
fi

# Select launcher tool
case $launch_tool in
    0) $app ;;
    1) primusrun $app ;;
    2) optirun $app ;;
esac

# Restore default performance level
if [ $perf_level_changed -eq 1 ]; then
    echo "Restoring NVIDIA GPU performance level to $default_perf_level."
    sudo sed -i "s/\b\(PowerMizer\(Default\|DefaultAC\)=0x\)[[:digit:]];\?\b/\1$default_perf_level/g" "$x11_nvidia_file"
    perf_level_changed=0
fi

