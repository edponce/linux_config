#!/bin/sh

. "$HOME/bin/common_utils"
errmsg="\033[01;31mERROR\033[00m"
warnmsg="\033[01;33mWARNING\033[00m"

usage()
{
cat << _EOF_
Usage: $(basename $0) [--help] [--file "PSFILE"]

Compile a PostScript file into PDF format.

If a PostScript file is not provided, current directory is searched for one.
_EOF_
}

# Default options
psffile=""
filext=".ps"

# Get command line options
while [ "$1" ]; do
    case "$1" in
        -h | --help) usage
            exit 0 ;;
        -f | --file) psffile="$2"
            shift 2 ;;
        *) usage
            echo -e "$errmsg: invalid command line option, $1"
            exit 1 ;;
    esac
done

# Validate
[ -z "$psffile" ] && psffile="$(find_file_ext "$filext")"
if [ ! -f "$psffile" ]; then
    echo -e "$errmsg: file '$psffile' does not exists"
    exit 1
fi

# Commands (compile and view)
psdir="$(dirname "$psffile")"
psfile="$(basename "$psffile")"
psbase="${psfile%.*}"
pspdf="$psbase.pdf"
pseps="$psbase.eps"
ps1_cmd="ps2eps --force --ignoreBB --rotate=+ \"$psfile\""
ps2_cmd="epstopdf --outfile=\"$pspdf\" \"$pseps\""
view_cmd="evince \"$pspdf\""

# Change to file directory
pushd . > /dev/null 2>&1
cd "$psdir"

# Run
eval $ps1_cmd; [ $? -eq 0 ] || exit 1
eval $ps2_cmd; [ $? -eq 0 ] || exit 1
rm "$pseps"

# View
[ -f "$pspdf" ] && eval $view_cmd &

# Change to initial directory
popd > /dev/null 2>&1

