#!/bin/bash

# Get dimensions and offsets of selected screen
#  0 -> lower-left (default)
#  1 -> second screen
# Returns: screen_dims, screen_offs
screen_position()
{
    screen_dims=()
    screen_offs=()
    local sid=0
    if [ $1 ]; then
        sid=$1
    fi
    if [ $sid -eq 0 ]; then
        # Lower-left screen
        local screen_regex="+0+0\b"
    elif [ $sid -eq 1 ]; then
        # Second screen
        local num_screens=$(xrandr | grep "\bconnected\b" | wc -l)
        if [ $num_screens -gt 1 ] && [ $sid -eq 1 ]; then
            local screen_regex="+[1-9]\+.*+0\b\|+0+[1-9]\+.*\|+[1-9]\+.*+[1-9]\+.*\b"
        fi
    else
        return
    fi

    # Parse dimensions and offsets
    local screen_query="$(xrandr | grep $screen_regex | sed -e 's/primary //' -e 's/ /:/g' -e 's/+/:/g' -e 's/-/:-/g' -e 's/x/:/')"
    screen_dims=( $(echo "$screen_query" | awk -F':' '{ print $3 " " $4 }') )
    screen_offs=( $(echo "$screen_query" | awk -F':' '{ print $5 " " $6 }') )
}

# Get dimensions and offsets of selected window
# Returns: screen_dims, screen_offs
window_position()
{
    echo "Please click on a window to use its geometry info."
    local win_query="$(xwininfo | grep "geometry" | sed -e 's/-geometry //' -e 's/+/:/g' -e 's/-/:-/g' -e 's/x/:/g')"
    screen_dims=( $(echo "$win_query" | awk -F':' '{ print $1 " " $2 }') )
    screen_offs=( $(echo "$win_query" | awk -F':' '{ print $3 " " $4 }') )
}

