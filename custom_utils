#!/bin/bash

# Get dimensions and offsets of selected screen
#  0 -> primary, LVDS1 
#  1 -> lower-left (default)
#  2 -> second screen
# Outputs: screen_dims, screen_offs
screen_position()
{
    local sid screen_regex screen_query
    screen_dims=() screen_offs=()

    if [ $# -eq 0 ]; then
        sid=1
    else
        sid=$1
    fi

    if [ $sid -eq 0 ]; then
        # Primary screen, LVDS1
        screen_regex="primary\W\d+x\d+((\+|-)\d+){2}\W"
    elif [ $sid -eq 1 ]; then
        # Lower-left screen
        screen_regex="\W\d+x\d+((\+|-)0){2}\W"
    elif [ $sid -eq 2 ]; then
        # Second screen
        if [ $(xrandr | grep -c '\bconnected\b') -gt 1 ]; then
            screen_regex="\W\d+x\d+(((\+|-)[1-9][0-9]*){2}|(\+|-)0(\+|-)[1-9][0-9]*|(\+|-)[1-9][0-9]*(\+|-)0)\W"
        fi
    fi

    # Parse dimensions and offsets
    if [ ! -z "$screen_regex" ]; then
        screen_query="$(xrandr | grep -P -o $screen_regex | head -n 1 | sed -e 's/ //' -e 's/primary//' -e 's/x/:/' -e 's/+/:/g' -e 's/-/:-/g')"
        screen_dims=($(echo "$screen_query" | awk -F':' '{ print $1 " " $2 }'))
        screen_offs=($(echo "$screen_query" | awk -F':' '{ print $3 " " $4 }'))
    fi
}

# Get dimensions and offsets of selected window
# Outputs: win_dims, win_offs
window_position()
{
    local wid win_values
    win_dims=() win_offs=()

    if [ $# -gt 0 ]; then
        wid="-id $1"
    else
        echo "Please click on a window to get its position and geometry information..."
        wid=
    fi

    readarray -t win_values <<< "$(xwininfo $wid | grep -P '(X|Y|Width|Height):' | awk -F':' '{ print $2 }')"
    win_offs=($((win_values[0] - win_values[2])) $((win_values[1] - win_values[3])))
    win_dims=(${win_values[4]} ${win_values[5]})
}

# Restore windows relative positions when disconnected from external monitor
window_restore()
{
    local w_list x_offs y_offs move
    local w_id=() w_desk=() w_offs=() w_dims=()

    # Get details of each visible window
    readarray -t w_list <<< "$(wmctrl -l)"
    for win in "${w_list[@]}"; do
        if [ $(echo "$win" | awk '{ print $2 }') -ne -1 ]; then
            w_id+=($(echo "$win" | awk '{ print $1 }'))
            w_desk+=($(echo "$win" | awk '{ print $2 }'))
            window_position ${w_id[-1]}
            w_dims+=(${win_dims[@]})
            w_offs+=(${win_offs[@]})
        fi
    done

    # Get details of screen at 0,0 position 
    screen_position 1

    # Move windows
    for ((w=0, x=0, y=1; w < ${#w_id[@]}; w++, x+=2, y+=2)); do
        x_offs=${w_offs[$x]}
        y_offs=${w_offs[$y]}
        move=0

        if [ $x_offs -ge ${screen_dims[0]} ]; then
            x_offs=$((x_offs - screen_dims[0]))
            move=1
        fi

        if [ $y_offs -ge ${screen_dims[1]} ]; then
            y_offs=$((y_offs - screen_dims[1]))
            move=1
        fi

        if [ $move -eq 1 ]; then
            wmctrl -i -r ${w_id[$w]} -t ${w_desk[$w]} -e 0,$x_offs,$y_offs,${w_dims[$x]},${w_dims[$y]}
        fi
    done
}

